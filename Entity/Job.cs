//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entity
{
    using System;
    using System.Collections.Generic;
    
    public partial class Job
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Job()
        {
            this.Applies = new HashSet<Apply>();
            this.JobSeekerLikeJob = new HashSet<JobSeeker>();
        }
        public Job(string companyid, string jobname, string position, string salaryString, string requirement, string description, string benefit, string workingform, DateTime dateend)
        {
            this.CompanyID = companyid;
            this.JobName = jobname;
            this.Position = position;

            decimal salary;
            if (decimal.TryParse(salaryString, out salary))
            {
                // Conversion successful, assign the salary to the property
                this.Salary = salary;
            }
            else
            {
                // Parsing failed, set salary to a default value (0 in this case)
                this.Salary = 0;
            }

            this.requirement = requirement;
            this.description = description;
            this.benefit = benefit;
            this.WorkingForm = workingform;
            this.DateEnd = dateend;
            this.status = "waiting";
            this.DatePublish = DateTime.Now;
        }
        public Job(string jobid, string companyid, string jobname, string position, string salaryString, string requirement, string description, string benefit, DateTime datapublish, DateTime dateend, string status, string workingform)
        {
            this.JobID = jobid;
            this.JobName = jobname;
            this.CompanyID = companyid;
            this.Position = position;
            decimal salary;
            if (decimal.TryParse(salaryString, out salary))
            {
                // Conversion successful, assign the salary to the property
                this.Salary = salary;
            }
            else
            {
                // Parsing failed, set salary to a default value (0 in this case)
                this.Salary = 0;
            }
            this.requirement = requirement;
            this.description = description;
            this.benefit = benefit;
            this.DatePublish = datapublish;
            this.DateEnd = dateend;
            this.status = status;
            this.WorkingForm = workingform;
        }
        public string JobID { get; set; }
        public string CompanyID { get; set; }
        public string JobName { get; set; }
        public string Position { get; set; }
        public Nullable<decimal> Salary { get; set; }
        public Nullable<System.DateTime> DatePublish { get; set; }
        public string requirement { get; set; }
        public string description { get; set; }
        public string status { get; set; }
        public string benefit { get; set; }
        public Nullable<System.DateTime> DateEnd { get; set; }
        public string WorkingForm { get; set; }
        public string Like { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Apply> Applies { get; set; }
        public virtual Company Company { get; set; }
        public virtual JobSkill JobSkill { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<JobSeeker> JobSeekerLikeJob { get; set; }
    }
}
